Ryan Kennedy 
December 16th, 2018
Period 7 
Mr. Kaplan 
Halite Bot Write-up 

      My bot’s strategy is based around creating a path for the ships to mine that will allow the ship to be filled with halite in the shortest amount of time. I had accomplished this goal by using a breadth first search, where it will evaluable outwards the surrounding positions, building a path from the start to each visited, and will only stop when the position visited added to the total halite in that path is greater than 950 minus the amount of halite the ship already has, a number I found works best for my strategy. 
      At the start of each turn, I prioritize ships that need to stay still to either mine halite or if they just cannot move because they don’t have enough halite. I do this so that when I look for ships to swap, I do not run into a problem with moving ships that are meant to stay still. The next prioritization I make is swapping the ships, where I will only swap two ships if they are trying to move to each other’s positions or a ship is trying to move to a position a ship is on and that ship is not doing anything. After prioritizing those two, I then move onto actually making the paths for the ships to mine, where I will make a new path for the ship if it doesn’t have one, its path is empty, its path is blocked by a ship, it has enough halite to return and needs one home, or it is just the end of the game and needs to head back. For actually making the path to mine halite, that is where my strategy described in the first paragraph comes into play. By reserving spaces that other ships are already mining, I am able to make it so that the paths for the ships are never going to the same place, and each ship has a path that will get it to 950 halite or greater.
      One final case I have for the ships is whether or not it should be converted into a drop-off. In larger maps as the distances between the ships and the shipyards increase, it is more efficient for a drop-off to be closer to the place the ship is mining than for it to have to spend the time traveling back and forth. What I do for this is every 17 ships spawned, the possibility for a drop-off is granted, where one will only be created if a ship is around a grouping of halite that has an average halite amount per cell greater than 200. This way the ships will be able to quickly mine an area with a lot of halite and not spend the time traveling back and forth to the shipyard. 
      The algorithms I use for my bot is two breadth first searches, one for creating the mining path for the ships and the other for finding the average amount of halite in an area around a ship. Breadth first searching was the right algorithm to use for both of these as in both I was looking for a way to evaluate the surrounding positions around me branching outwards by only looking at the cells I needed to, and this does exactly that. For each of these, it stops exactly when I need to, and in each I am able to get this answer in the shortest amount of time with it only looking at the necessary cells.  Compared to just looking at every cell, I am saving myself from possibly having to search through cells as large as 64^2, something that if ran hundreds of times could become time intensive. 
      Some of the data structures I utilized here was a hash map dictionary, which is useful for me being able to store the path each ship is following, hash sets which allow me to quickly check if something is in the set, and lists which allow me to see what order things were added and to be able to get the oldest element in the list by just getting the first one in it.   

